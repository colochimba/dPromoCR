{"version":3,"sources":["webpack:///./src/app/ingresar/ingresar.module.ts","webpack:///./src/app/ingresar/ingresar.page.html","webpack:///./src/app/ingresar/ingresar.page.scss","webpack:///./src/app/ingresar/ingresar.page.ts"],"names":[],"mappings":"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","file":"ingresar-ingresar-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IngresarPage } from './ingresar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IngresarPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [IngresarPage]\n})\nexport class IngresarPageModule {}\n","module.exports = \"<ion-content center padding class=\\\"bg-image\\\" fullscreen=\\\"true\\\">\\n\\n    <ion-img src=\\\"assets/images/logo-dpromocr.png\\\"></ion-img>\\n    <div text-center>\\n        <h2>Ingresar</h2>\\n        <h4>Bienvenido de nuevo, por favor ingrese para continuar</h4>\\n    </div>\\n\\n    <ion-item>\\n\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input [(ngModel)]=\\\"email\\\" type=\\\"email\\\" name=\\\"email\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\n        <ion-input [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-button (click)=\\\"OnSubmitLogin()\\\" expand=\\\"block\\\" class=\\\"ion-margin-top\\\" padding>Ingresar</ion-button>\\n    <div padding text-center>\\n        <a class=\\\"link\\\" (click)=\\\"onChangePassword()\\\">Olvidó su contraseña?</a>\\n    </div>\\n</ion-content>\\n\\n<ion-footer padding text-center>\\n    <a class=\\\"link\\\" routerLink=\\\"/registro\\\">Registrar una nueva cuenta nueva</a>\\n</ion-footer>\"","module.exports = \"ion-content {\\n  --background: url('app-bg.jpg') no-repeat center center / cover;\\n  --color: #fff; }\\n\\nion-item {\\n  --background: transparent !important; }\\n\\nion-button {\\n  --background: #fff;\\n  --color:#DF4A60; }\\n\\na, ion-input, .link, ion-label {\\n  --color: #fff !important;\\n  color: #fff !important;\\n  text-decoration: none; }\\n\\nion-item {\\n  --border-color: #fff\\n; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGVqYW5kcm9hcmNlL0Rlc2t0b3AvTXlQcm9qZWN0cy9kUHJvbW9DUi1tYXN0ZXIvc3JjL2FwcC9pbmdyZXNhci9pbmdyZXNhci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwrREFBYTtFQUNiLGFBQVEsRUFBQTs7QUFHVjtFQUNFLG9DQUFhLEVBQUE7O0FBR2Y7RUFDRSxrQkFBYTtFQUNiLGVBQVEsRUFBQTs7QUFHVjtFQUNFLHdCQUFRO0VBQ1Isc0JBQXNCO0VBQ3RCLHFCQUFzQixFQUFBOztBQUl2QjtFQUNDO0FBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2luZ3Jlc2FyL2luZ3Jlc2FyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50e1xuICAtLWJhY2tncm91bmQ6IHVybCgnLi4vLi4vYXNzZXRzL2ltYWdlcy9hcHAtYmcuanBnJykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgLyBjb3ZlcjtcbiAgLS1jb2xvcjogI2ZmZjtcbn1cblxuaW9uLWl0ZW0ge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1idXR0b24ge1xuICAtLWJhY2tncm91bmQ6ICNmZmY7XG4gIC0tY29sb3I6I0RGNEE2MDtcbn1cblxuYSwgaW9uLWlucHV0LCAubGluaywgaW9uLWxhYmVse1xuICAtLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG4gIHRleHQtZGVjb3JhdGlvbjogIG5vbmU7XG59XG5cblxuIGlvbi1pdGVte1xuICAtLWJvcmRlci1jb2xvcjogI2ZmZlxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../servicios/auth.service';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'app-ingresar',\n  templateUrl: './ingresar.page.html',\n  styleUrls: ['./ingresar.page.scss'],\n})\nexport class IngresarPage implements OnInit {\n\n  email: string;\n  password: string;\n\n  constructor(private authService: AuthService, public router: Router, private storage: Storage) { \n    this.storage.get(\"dpromocr\").then((val) => {\n      if(val != undefined && val != null){\n        authService.authUser = (<firebase.User>JSON.parse(val));\n        authService.getUserInDB();\n        this.router.navigate(['tab']);\n      }\n    });\n    \n  }\n\n  ngOnInit() {\n  }\n\n  OnSubmitLogin(){\n    //https://stackoverflow.com/questions/47751377/firebase-prevent-same-account-on-multiple-devices\n      //alert(\"Sesión iniciada. Desea cerrar la sesión para ingresar de otro dispositivo?\");\n    //}else{\n      this.authService.login(this.email, this.password).then( res => {\n        this.password = \"\";\n        this.storage.set(\"dpromocr\", JSON.stringify(this.authService.authUser));\n        this.router.navigate(['tab']);\n      }).catch(err => alert('los datos son incorrectos o no existe el usuario'));\n\n      \n    //}\n  }\n\n  onChangePassword(){\n    if(this.email !== undefined && this.email !== \"\"){\n      this.authService.changePassword(this.email).then( res => {\n        alert('Se ha enviado el correo para cambiar la contraseña');\n      }).catch(err => alert('Los datos son incorrectos o no existe el usuario'));\n    }\n    else{\n      alert('Ingrese el correo electrónico de su cuenta');\n    }\n  }\n\n}\n"],"sourceRoot":""}